{"version":3,"sources":["logo.svg","components/ReactDiff.js","components/CodeView.js","components/Sync.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fnMap","chars","jsdiff","words","sentences","json","lines","oldStr","newStr","newlineIsToken","Diff","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","result","props","type","inputA","inputB","map","part","index","processed","length","substring","added","react_default","a","createElement","removed","className","React","Component","defaultProps","defaultState","isEditing","newValue","CodeView","_this","call","state","startEditing","bind","assertThisInitialized","save","revert","render","nextProps","change","file","setState","updateStagedFile","newFileContents","_this2","before","originalFileContents","after","viewer","onClick","ReactDiff_Diff","editor","onChange","event","target","Sync","selectedFileIndex","updated","changes","setSelectedFile","newOne","toConsumableArray","objectSpread","request","post","updatedChanges","window","close","require","content","CodeView_CodeView","navigation","style","marginLeft","height","PanelGroup","direction","borderColor","panelWidths","size","minSize","resize","innerHeight","innerWidth","width","name","relativePath","lastIndexOf","classNames","defineProperty","data-tip","data-delay-show","dist_default","place","effect","App","patch","error","response","body","JSON","parse","Sync_Sync","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbe92b14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport * as jsdiff from 'diff';\n\nconst fnMap = {\n  'chars': jsdiff.diffChars,\n  'words': jsdiff.diffWords,\n  'sentences': jsdiff.diffSentences,\n  'json': jsdiff.diffJson,\n  'lines': (oldStr, newStr) => jsdiff.diffLines(oldStr, newStr, {newlineIsToken: true})\n};\n\n/**\n * Display diff in a stylable form.\n *\n * Default is character diff. Change with props.type. Valid values\n * are 'chars', 'words', 'sentences', 'json', 'lines,.\n *\n *  - Wrapping div has class 'Difference', override with props.className\n *  - added parts are in <ins>\n *  - removed parts are in <del>\n *  - unchanged parts are in <span>\n */\n\nexport class Diff extends React.Component {\n  render() {\n    const diff = fnMap[this.props.type](this.props.inputA, this.props.inputB);\n\n    const result = diff.map((part, index) => {\n\n      const processed = (() => {\n        if (part.value[0] === '\\n' && part.value.length > 1) {\n          return part.value.substring(1)\n        }\n\n        if (part.value[0] === '\\n' && part.value.length === 1) {\n          return ''\n        }\n\n        return part.value\n\n\t  })()\n\n      if (part.added) {\n        return <ins key={index}>{part.value}</ins>\n      }\n      if (part.removed) {\n        return <del key={index}>{part.value}</del>\n      }\n\n      return <same key={index}>{processed}</same>\n    });\n    return (\n      <div className={this.props.className}>\n          {result}\n      </div>\n    );\n  }\n}\n\nDiff.defaultProps = {\n  inputA: '',\n  inputB: '',\n  type: 'chars',\n  className: 'Difference'\n};\n","import React from 'react'\nimport './Sync.css'\nimport {Diff} from './ReactDiff'\n\nconst defaultState = {\n\tisEditing: false,\n\tnewValue: null\n}\n\nexport class CodeView extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = defaultState\n\n\t\tthis.startEditing = this.startEditing.bind(this);\n\t\tthis.save = this.save.bind(this);\n\t\tthis.revert = this.revert.bind(this);\n\t\tthis.render = this.render.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.change.file !== this.props.change.file) {\n\t\t\tthis.setState(defaultState)\n\t\t}\n\t}\n\n\n\tstartEditing() {\n\t\tthis.setState({isEditing: true})\n\t}\n\n\tsave() {\n\t\tthis.props.updateStagedFile(this.props.change.file, this.state.newValue)\n\t\tthis.setState({isEditing: false})\n\t}\n\n\trevert() {\n\t\tthis.setState({isEditing: false, newValue: this.props.change.newFileContents})\n\t}\n\n\tonChange(value) {\n\t\tthis.setState({newValue: value})\n\t}\n\n\trender() {\n\n\t\tconst before = this.props.change.originalFileContents\n\t\tconst after = this.props.change.newFileContents\n\n\t\tconst viewer = (\n\t\t\t<div className={'codeViewer'} onClick={this.startEditing}>\n\t\t\t\t<Diff type=\"lines\"\n\t\t\t\t\t  inputA={before}\n\t\t\t\t\t  inputB={after}/>\n\t\t\t</div>\n\t\t)\n\n\t\tconst editor = (\n\t\t\t<div className={'codeViewer'}>\n\t\t\t\t<div className={'codeEditNav'}>\n\t\t\t\t\t<div className={'codeEditNavItem'} onClick={this.revert}>Revert</div>\n\t\t\t\t\t<div className={'codeEditNavItem'} onClick={this.save}>Save</div>\n\t\t\t\t</div>\n\t\t\t\t<textarea\n\t\t\t\t\tclassName={'codeTextEditor'}\n\t\t\t\t\tonChange={(event)=> this.onChange(event.target.value)}\n\t\t\t\t\tvalue={(this.state.newValue === null) ? after : this.state.newValue }\n\t\t\t\t/>\n\t\t</div>\n\t\t)\n\n\t\treturn (\n\t\t\t<div className={'syncPanel'}>\n\t\t\t\t{(this.state.isEditing) ? editor : viewer}\n\t\t\t</div>\n\t\t)\n\t}\n\n\n}\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport PanelGroup from 'react-panelgroup'\nimport classNames from 'classnames'\nimport {bubbleNumberFor} from \"./DataFunctions\";\nimport {CodeView} from \"./CodeView\";\nimport ReactTooltip from 'react-tooltip'\nimport './Sync.css'\nimport request from \"request\";\n\nexport default class Sync extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tselectedFileIndex: 0,\n\t\t\tupdated: props.changes\n\t\t}\n\n\t\tthis.render = this.render.bind(this)\n\t\tthis.apply = this.apply.bind(this)\n\t\tthis.setSelectedFile = this.setSelectedFile.bind(this)\n\t\tthis.updateStagedFile = this.updateStagedFile.bind(this)\n\t}\n\n\tupdateStagedFile(file, newFileContents) {\n\t\tconst newOne = [...this.state.updated]\n\t\tnewOne[this.state.selectedFileIndex] = {...newOne[this.state.selectedFileIndex], newFileContents}\n\t\tthis.setState({updated: newOne})\n\t}\n\n\tsetSelectedFile(file) {\n\t\tthis.setState({selectedFileIndex: file})\n\t}\n\n\n\tapply() {\n\t\trequest.post('http://localhost:30332/apply-patch', {json: {updatedChanges: this.state.updated}}, function () {\n\t\t\twindow.close()\n\t\t});\n\t}\n\n\trender() {\n\n\t\tconst changes = this.state.updated\n\n\n\t\trequire('./DiffStyles.css')\n\n\t\tconst content =  <CodeView change={changes[this.state.selectedFileIndex]} updateStagedFile={this.updateStagedFile}/>\n\n\t\tconst navigation = (\n\t\t<div className={'syncPanel'}>\n\t\t\t<div className={'navigationWrapper'}>\n\t\t\t\t{/*<div className={classNames(navigationItem, {[disabledNavigationItem]: !this.props.warningsNumber})} data-html={true} data-tip={ReactDOMServer.renderToStaticMarkup(warningsRendered)}>*/}\n\t\t\t\t\t{/*<div className={classNames(toolbarIcon, warningIcon)}><div className={number}>{bubbleNumberFor(this.props.warningsNumber)}</div></div>*/}\n\t\t\t\t{/*</div>*/}\n\t\t\t\t{/*<div className={classNames(navigationItem, {[disabledNavigationItem]: !this.props.errorsNumber})} data-html={true} data-tip={ReactDOMServer.renderToStaticMarkup(errorsRendered)}>*/}\n\t\t\t\t\t{/*<div className={classNames(toolbarIcon, errorIcon)}><div className={number}>{bubbleNumberFor(this.props.errorsNumber)}</div></div>*/}\n\t\t\t\t{/*</div>*/}\n\t\t\t\t<div className={'codeEditNavItem'} style={{marginLeft: 5, height: 40}} onClick={this.apply}>\n\t\t\t\t\tApply Patch\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>)\n\n\t\treturn (\n\t\t\t<PanelGroup direction=\"column\" borderColor=\"#c2c2c2\" panelWidths={[\n\t\t\t\t{size: 40, minSize:50, resize: \"fixed\"},\n\t\t\t\t{size: window.innerHeight - 50, resize: \"fixed\"},\n\t\t\t]}>\n\t\t\t\t{navigation}\n\t\t\t\t<div className={'syncPanel'}>\n\n\t\t\t\t\t<PanelGroup direction=\"row\" borderColor=\"#c2c2c2\" panelWidths={[\n\t\t\t\t\t\t{size: 250,  resize: \"fixed\"},\n\t\t\t\t\t\t{size: window.innerWidth - 250, resize: \"fixed\"},\n\t\t\t\t\t]}>\n\n\t\t\t\t\t\t<div className={'syncPanel'} >\n\t\t\t\t\t\t\t<ul className={'fileList'} style={{width: '100%'}}>\n\t\t\t\t\t\t\t\t{changes.map((change, index)=> {\n\t\t\t\t\t\t\t\t\tconst name = change.relativePath.substring(change.relativePath.lastIndexOf('/') + 1)\n\t\t\t\t\t\t\t\t\treturn (<li\n\t\t\t\t\t\t\t\t\t\tclassName={classNames({['liActive']: this.state.selectedFileIndex === index})}\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tdata-tip={change.relativePath}\n\t\t\t\t\t\t\t\t\t\tdata-delay-show={500}\n\t\t\t\t\t\t\t\t\t\tonClick={()=> this.setSelectedFile(index)}>\n\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t\t</li>)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</PanelGroup>\n\t\t\t\t\t<ReactTooltip place=\"bottom\" type=\"light\" effect=\"solid\" />\n\t\t\t\t</div>\n\t\t\t</PanelGroup>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Sync from \"./components/Sync\";\nimport {examplePatch} from \"./ExamplePatch\";\nimport request from 'request'\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tpatch: null\n\t\t}\n\n\t\tconst setState = this.setState.bind(this)\n\n\t\trequest('http://localhost:30332/get-patch', function (error, response, body) {\n\t\t\tsetState({patch: JSON.parse(body)})\n\t\t});\n\t}\n\n\trender() {\n\n\t\tconst content = (this.state.patch) ? <Sync {...this.state.patch} /> : <div>Loading...</div>\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}