{"info":{"author":"optic","package":"request-js","version":"0.4.0","dependencies":{"optic:rest":"0.4.0"}},"lenses":[{"name":"HTTP Request","id":"http-request","snippet":{"block":"request.get({}, function (err, response, body) {\n  //:handler\n  if (response.statusCode >= 200 && statusCode.status < 300) {\n    //:success\n  } else {\n    //:error\n  }\n\n})","language":"es7"},"value":{"method":{"type":"token","at":{"astType":"Identifier","range":{"start":8,"end":11}}},"options":{"type":"object-literal","at":{"astType":"ObjectExpression","range":{"start":12,"end":14}}}},"variables":{"err":"self","response":"self","body":"self"},"containers":{"handler":"any","success":"any","error":"any"},"schema":"request","initialValue":{},"priority":1,"internal":false}],"schemas":[{"id":"request","definition":{"title":"HTTP Request","type":"object","required":["method"],"properties":{"method":{"type":"string","enum":["get","post","put","delete","head","options"]},"options":{"type":"object","required":["uri"],"properties":{"uri":{"type":"string"},"qs":{"type":"object","patternProperties":{"^.*$":{}}},"body":{"anyOf":[{"type":"object","required":["_valueFormat","value"],"properties":{"_valueFormat":{"type":"string","const":"code"},"value":{"type":"string"}},"title":"Code","default":{"value":"code","_valueFormat":"code"}},{"type":"object","required":["_valueFormat","value"],"properties":{"_valueFormat":{"type":"string","const":"token"},"value":{"type":"string"}},"title":"Token","default":{"value":"token","_valueFormat":"token"}},{"type":"string","title":"String"},{"type":"object","title":"Object","patternProperties":{"^.*$":{}}}]},"json":{"anyOf":[{"$ref":"#/definitions/optic/code"},{"$ref":"#/definitions/optic/token"},{"type":"string","title":"String"},{"type":"object","title":"Object","patternProperties":{"^.*$":{}}}]}}}}}}],"transformations":[{"yields":"Request from Route","id":"request-from-route","input":"optic:rest/route","script":"function (input, answers) {\n  var requestDescription = {\n    method: input.method,\n    options: {\n      uri: input.url\n    }\n  };\n  var queryParams = input.parameters.filter(function (i) {\n    return i.in === 'query';\n  });\n\n  if (!!queryParams.length) {\n    var qs = {};\n    queryParams.forEach(function (i) {\n      return qs[i.name] = {\n        _valueFormat: 'token',\n        value: i.name\n      };\n    });\n    requestDescription.options.qs = qs;\n  }\n\n  var bodyParams = input.parameters.filter(function (i) {\n    return i.in === 'body';\n  });\n\n  if (!!bodyParams.length) {\n    var json = {};\n    bodyParams.forEach(function (i) {\n      return json[i.name] = {\n        _valueFormat: 'token',\n        value: i.name\n      };\n    });\n    requestDescription.options.json = json;\n  }\n\n  var headerParams = input.headers;\n\n  if (!!queryParams.length) {\n    var headers = {};\n    headerParams.forEach(function (i) {\n      return headers[i.name] = i.name;\n    });\n    requestDescription.options.headers = headers;\n  }\n\n  return Generate(answers.output, requestDescription, {\n    generatorId: \"http-request\"\n  });\n}","output":"request","ask":{},"dynamicAsk":{}}]}