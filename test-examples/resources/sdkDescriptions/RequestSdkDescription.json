{
  "lenses": [{
    "name": "Parameter",
    "scope": "internal",
    "schema": "js-example-route-parameter^1.0.0",
    "snippet": {
      "name": "Parameter",
      "lang": "Javascript",
      "version": "es6",
      "block": "req.query.name"
    },
    "rules": [],
    "components": [{
      "type": "code",
      "codeType": "token",
      "finder": {
        "type": "string",
        "rule": "entire",
        "string": "query",
        "occurrence": 0
      },
      "propertyPath": "in",
      "pathObject": {
        "type": "string"
      },
      "options": {
        "lookupTable": null,
        "invariant": false,
        "parser": null,
        "mutator": null
      }
    }, {
      "type": "code",
      "codeType": "token",
      "finder": {
        "type": "string",
        "rule": "entire",
        "string": "name",
        "occurrence": 0
      },
      "propertyPath": "name",
      "pathObject": {
        "type": "string"
      },
      "options": {
        "lookupTable": null,
        "invariant": false,
        "parser": null,
        "mutator": null
      }
    }]
  }, {
    "name": "Example Route",
    "scope": "public",
    "schema": "js-example-route^1.0.0",
    "snippet": {
      "name": "Example Route",
      "lang": "Javascript",
      "version": "es6",
      "block": "app.get('url', function (req, res) {\n\n})"
    },
    "rules": [{
      "type": "children",
      "finder": {
        "type": "string",
        "rule": "starting",
        "string": "{",
        "occurrence": 0
      },
      "ruleType": "any"
    }],
    "components": [{
      "type": "code",
      "codeType": "token",
      "finder": {
        "type": "string",
        "rule": "entire",
        "string": "get",
        "occurrence": 0
      },
      "propertyPath": "method",
      "pathObject": {
        "type": "string"
      },
      "options": {
        "lookupTable": null,
        "invariant": false,
        "parser": null,
        "mutator": null
      }
    }, {
      "type": "code",
      "codeType": "literal",
      "finder": {
        "type": "string",
        "rule": "containing",
        "string": "url",
        "occurrence": 0
      },
      "propertyPath": "url",
      "pathObject": {
        "type": "string"
      },
      "options": {
        "lookupTable": null,
        "invariant": false,
        "parser": null,
        "mutator": null
      }
    }, {
      "type": "schema",
      "schema": "js-example-route-parameter^1.0.0",
      "propertyPath": "parameters",
      "pathObject": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/parameter"
        }
      },
      "location": {
        "type": "InParent",
        "finder": null
      },
      "options": {
        "lookupTable": null,
        "invariant": false,
        "parser": null,
        "mutator": null
      }
    }]
  }],
  "schemas": {
    "js-example-route^1.0.0": {
      "title": "Route",
      "version": "1.0.0",
      "slug": "js-example-route",
      "type": "object",
      "required": ["method", "url"],
      "properties": {
        "method": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parameter"
          }
        }
      },
      "definitions": {
        "parameter": {
          "title": "Parameter",
          "version": "1.0.0",
          "slug": "js-example-route-parameter",
          "type": "object",
          "required": ["method"],
          "properties": {
            "in": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        }
      },
      "exported": true
    },
    "js-example-route-parameter^1.0.0": {
      "title": "Parameter",
      "version": "1.0.0",
      "slug": "js-example-route-parameter",
      "type": "object",
      "required": ["method"],
      "properties": {
        "in": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}